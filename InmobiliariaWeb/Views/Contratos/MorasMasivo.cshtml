@model InmobiliariaWeb.Models.Contratos.MorasMasivoViewModel
@{
    Layout = "_ContratosLayout";
}
<form method="post" asp-action="MorasMasivo" asp-asp-controller="Contratos">
    <input type="hidden" asp-for="Ident_Kardex"/>
    <input type="hidden" asp-for="Ident_Contratos" />
    <div class="container">
        <div class="card">
            <div class="card-header fw-bold">
                <h2>@ViewBag.NumeroSerie - Moras Masivas</h2>
            </div>
            <div class="card-body">
                <div class="row g-2">
                    <div class="col-6 col-sm-6 col-md-3 col-lg-3">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="ImporteMorasTotal" asp-for="ImporteMorasTotal" readonly />
                            <label for="ImporteMorasTotal">Total Moras</label>
                        </div>
                    </div>
                    <div class="col-6 col-sm-6 col-md-3 col-lg-3">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="DescuentoDirecto" asp-for="DescuentoDirecto" onblur="MoraFinal()" />
                            <label for="DescuentoDirecto">Descuento $</label>
                        </div>
                    </div>
                    <div class="col-6 col-sm-6 col-md-3 col-lg-3">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="DescuentoPorcentaje" asp-for="DescuentoPorcentaje" onblur="MoraFinal()" />
                            <label for="DescuentoPorcentaje">Descuento %</label>
                        </div>
                    </div>
                    <div class="col-6 col-sm-6 col-md-3 col-lg-3">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="NuevoMontoMora" asp-for="NuevoMontoMora" readonly />
                            <label for="NuevoMontoMora">Nuevo Total</label>
                        </div>
                    </div>

                    <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                        <div class="form-floating">
                            <select id="Ident_018_TipoPago" class="form-select" asp-for="@Model.Ident_018_TipoPago" onchange="ObtenerTipoPago(this.value)">
                                <option>--SELECCIONE--</option>
                                @foreach (var tipoPago in Model.TipoPagos)
                                {
                                    <option value="@tipoPago.Ident_018_TipoPago">@tipoPago.Descripcion</option>
                                }
                            </select>
                            <label for="Ident_018_TipoPago">Tipo de Pago</label>
                        </div>
                    </div>
                    <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                        <div class="form-floating">
                            <select id="Ident_002_TipoMoneda" class="form-select" asp-for="@Model.Ident_002_TipoMoneda" onchange="ValidarTipoCambio(this)">
                                <option>--SELECCIONE--</option>
                                @foreach (var moneda in Model.TipoMonedas)
                                {
                                    <option value="@moneda.Ident_002_TipoMoneda">@moneda.Abreviatura</option>
                                }
                            </select>
                            <label for="Ident_002_TipoMoneda">Moneda</label>
                        </div>
                    </div>
                    <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                        <div class="form-floating">
                            <select id="Ident_019_Banco" class="form-select" asp-for="@Model.Ident_019_Banco" onchange="ObtenerCuentasBancarias(this.value)">
                                <option>--SELECCIONE--</option>
                                @foreach (var banco in Model.Bancos)
                                {
                                    <option value="@banco.Ident_019_Banco">@banco.Abreviatura</option>
                                }
                            </select>
                            <label for="Ident_019_Banco">Banco</label>
                        </div>
                    </div>
                    <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                        <div class="form-floating">
                            <select id="Ident_CuentasBancarias" class="form-select" asp-for="@Model.Ident_CuentasBancarias" onchange="SeleccionarMoneda(this)">
                                <option>--SELECCIONE--</option>

                            </select>
                            <label for="Ident_CuentasBancarias">N° Cuenta</label>
                        </div>
                    </div>
                    <div class="col-6 col-sm-6 col-md-3 col-lg-3">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="TipoCambio" asp-for="@Model.TipoCambio" />
                            <label for="TipoCambio">T.C.</label>
                        </div>
                    </div>
                    <div class="col-6 col-sm-6 col-md-3 col-lg-3">
                        <div class="form-floating">
                            <input class="form-control" type="text" id="NumeroOperacion" asp-for="@Model.NumeroOperacion" />
                            <label for="NumeroOperacion">Número Operación</label>
                        </div>
                    </div>
                    <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                        <div class="form-floating">
                            <input class="form-control" type="number" id="ImporteMorasDolares" asp-for="@Model.ImporteMorasDolares" onblur="ObtenerImporteMora()" />
                            <label for="ImporteMorasDolares">Importe Dolares</label>
                        </div>
                    </div>
                    <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                        <div class="form-floating">
                            <input class="form-control" type="number" id="ImporteMorasPagado" asp-for="@Model.ImporteMorasPagado" readonly />
                            <label for="ImporteMorasPagado">Importe Pagado</label>
                        </div>
                    </div>
                    <div class="col-6 col-sm-6 col-md-3 col-lg-3">
                        <div class="form-floating">
                            <input class="form-control" type="date" id="FechaPago" asp-for="@Model.FechaPago" />
                            <label for="FechaPago">Fecha Pago</label>
                        </div>
                    </div>
                    <div class="row mt-2">
                        <div class="col-12">
                            <button type="submit" class="btn btn-outline-success" id="btnAgregar" disabled>
                                AGREGAR <i class="bi bi-database-fill-add"></i>
                            </button>
                        </div>
                    </div>
                    <div class="table-responsive-md mt-2">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>N°</th>
                                    <th>Tipo Pago</th>
                                    <th>Importe</th>
                                    <th>Numero Operacion</th>
                                    <th>banco</th>
                                    <th style="min-height:200px;">Numero Cuenta</th>
                                    <th>Moneda</th>
                                    <th>T.C.</th>
                                    <th>Fecha</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var ingresosDetalle in Model.ingresosDetallesLists)
                                {
                                    <tr>
                                        <td>@ingresosDetalle.Indice</td>
                                        <td>@ingresosDetalle.TipoPago</td>
                                        <td class="importe-detalle">@ingresosDetalle.Importe</td>
                                        <td>@ingresosDetalle.NumeroOperacion</td>
                                        <td>@ingresosDetalle.Banco</td>
                                        <td>@ingresosDetalle.NumeroCuenta</td>
                                        <td>@ingresosDetalle.Moneda</td>
                                        <td>@ingresosDetalle.TipoCambio</td>
                                        <td>@(ingresosDetalle.Fecha.HasValue ? ingresosDetalle.Fecha.Value.ToString("dd/MM/yyyy") : "")</td>
                                        <td>
                                            <a class="btn btn-outline-danger"
                                               onclick="mostrarModalEliminar('@Url.Action("Eliminar_IngresosDetalle_Mora","Contratos", new{Ident_IngresosDetalle = ingresosDetalle.Ident_IngresosDetalle})')">
                                                <i class="bi-trash3"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="row g-2 row-cols-2 row-cols-lg-2 row-cols-md-2 row-cols-2 mt-1">
                        <div class="col">
                            <div class="form-floating">
                                <input class="form-control" id="ImporteTotalPagado" type="number" asp-for="@Model.ImporteTotalPagado" readonly />
                                <label for="ImporteTotalPagado">Total Pagado</label>
                            </div>
                        </div>
                        <div class="col">
                            <div class="form-floating">
                                <input class="form-control" type="number" id="saldo" readonly asp-for="@Model.SaldoAPagar" />
                                <label for="saldo">Saldo</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <div class="d-grid gap-2 d-flex mt-1">
                        <a class="btn btn-outline-secondary" asp-action="Kardex" asp-controller="Contratos">
                            REGRESAR <i class="bi bi-skip-backward-fill"></i>
                        </a>
                        <a class="btn btn-outline-success" onclick="abrirModalPropietarios(@Model.Ident_Contratos, @Model.Ident_Kardex)">
                            IMPRIMIR <i class="bi bi-print"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
@section Scripts{
    <partial name="_ValidationScriptsPartial" />
}
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
@if (!string.IsNullOrEmpty(ViewBag.Mensaje))
{
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body">
                    @ViewBag.Mensaje
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        MoraFinal();
        ActualizarImporteTotalPagado()
        ActualizarSaldo();
        var mensajeError = '@ViewBag.Mensaje';
        if (mensajeError && mensajeError.trim() !== '') {
            $(window).load(function () {
                $('#myModal').modal('show');
            });
        };
    });
    function MoraFinal() {
        // Obtener valores
        var importeMorasTotal = parseFloat(document.getElementById("ImporteMorasTotal").value) || 0;
        var descuentoDirecto = parseFloat(document.getElementById("DescuentoDirecto").value) || 0;
        var descuentoPorcentaje = parseFloat(document.getElementById("DescuentoPorcentaje").value) || 0;

        // Paso 1: aplicar el descuento por porcentaje
        var montoConDescuentoPorcentaje = importeMorasTotal;
        if (descuentoPorcentaje > 0) {
            var descuentoCalculado = (descuentoPorcentaje * importeMorasTotal) / 100;
            montoConDescuentoPorcentaje -= descuentoCalculado;
        }

        // Paso 2: aplicar descuento directo
        var nuevoMontoMoras = montoConDescuentoPorcentaje;
        if (descuentoDirecto > 0) {
            nuevoMontoMoras -= descuentoDirecto;
        }

        // Validación para evitar monto negativo
        if (nuevoMontoMoras < 0) {
            $('#modalError').modal('show');
            document.getElementById("DescuentoDirecto").value = 0;
            document.getElementById("DescuentoPorcentaje").value = 0;
            return;
        }

        // Mostrar el nuevo total
        document.getElementById("NuevoMontoMora").value = nuevoMontoMoras.toFixed(2);

        // Validaciones adicionales
        ValidarImporteMoras();
        ActualizarSaldo();
    }



    function ObtenerTipoPago(tipoPagoId) {
        // Verificamos si el tipo de pago es "EFECTIVO"
        var efectivoOption = 115; // Asegúrate que este valor es el que corresponde a "EFECTIVO"
        // Si se selecciona "EFECTIVO"
        if (tipoPagoId == efectivoOption) {
            // Deshabilitar los campos de banco y cuenta
            document.getElementById('Ident_019_Banco').disabled = true;
            document.getElementById('Ident_CuentasBancarias').disabled = true;
            document.getElementById('NumeroOperacion').disabled = true;

            // Establecer la opción por defecto "--SELECCIONE--" en los select deshabilitados
            document.getElementById('Ident_019_Banco').selectedIndex = 0;
            document.getElementById('Ident_CuentasBancarias').selectedIndex = 0;
            $("#NumeroOperacion").val("");

        } else {
            // Si no es "EFECTIVO", habilitar los campos de banco y cuenta
            document.getElementById('Ident_019_Banco').disabled = false;
            document.getElementById('Ident_CuentasBancarias').disabled = false;
            document.getElementById('NumeroOperacion').disabled = false;
        }
    }
    function ValidarTipoCambio(selectElement) {
        var tipoMonedaSeleccionada = selectElement.value;
        var tipoCambioInput = document.getElementById("TipoCambio");

        // Si el valor seleccionado es vacío (no se seleccionó nada), no hacer nada
        if (tipoMonedaSeleccionada === "") {
            return;
        }

        // Si la opción seleccionada es 23, asigna 1 al Tipo de Cambio
        if (tipoMonedaSeleccionada === "23") {
            tipoCambioInput.value = "1";
        }
        // Si la opción seleccionada es 24, solo valida el Tipo de Cambio
        else if (tipoMonedaSeleccionada === "24") {
            // Si el Tipo de Cambio es menor o igual a 1, muestra una alerta
            if (parseFloat(tipoCambioInput.value) <= 1) {
                alert("Debe ingresar un tipo de cambio mayor a 1.");
                tipoCambioInput.focus();  // Coloca el foco en el campo de tipo de cambio
            }
        }
    }
    let cuentasBancariasData = {};
    function ObtenerCuentasBancarias(Ident_019_Banco) {
        $.get(`/Caja/GetCuentasBancarias?Ident_019_Banco=${Ident_019_Banco}`, function (data) {
            // Limpiar la selección del tipo de moneda
            $("#Ident_002_TipoMoneda").val(""); // Reinicia a "--SELECCIONE--"

            // Limpiar las cuentas bancarias
            cuentasBancariasData = {};
            $("#Ident_CuentasBancarias").empty();
            $("#Ident_CuentasBancarias").append('<option value="">--SELECCIONE--</option>');

            // Agregar las cuentas bancarias al select
            $.each(data, function (index, item) {
                $("#Ident_CuentasBancarias").append(
                    `<option value="${item.ident_CuentasBancarias}">${item.detalleCuenta}</option>`
                );
                cuentasBancariasData[item.ident_CuentasBancarias] = item.ident_002_TipoMoneda;
            });
        });
    }
    function SeleccionarMoneda(selectElement) {
        const cuentaSeleccionada = selectElement.value;

        // Buscar el identificador de la moneda asociada
        const monedaSeleccionada = cuentasBancariasData[cuentaSeleccionada];

        // Seleccionar la moneda en el select de tipo de moneda
        if (monedaSeleccionada) {
            $("#Ident_002_TipoMoneda").val(monedaSeleccionada);
        } else {
            $("#Ident_002_TipoMoneda").val(""); // Limpiar selección si no hay moneda asociada
        }

        // Llamar a la función ValidarTipoCambio para realizar la validación después de cambiar la moneda
        ValidarTipoCambio(document.getElementById("Ident_002_TipoMoneda"));
    }
    function ObtenerImporteMora() {
        var importeDolares = document.getElementById('ImporteMorasDolares').value;
        var tipoCambio = document.getElementById('TipoCambio').value;
        var tipoMoneda = document.getElementById('Ident_002_TipoMoneda').value;

        if (tipoMoneda === "--SELECCIONE--" || tipoMoneda === "") {
            alert("Por favor, seleccione un tipo de moneda.");
            return;
        }

        if (tipoMoneda === "24") {
            if (parseFloat(tipoCambio) <= 1) {
                alert("El tipo de cambio para Soles debe ser mayor a 1.");
                document.getElementById('TipoCambio').focus();
                return;
            }
        } else if (tipoMoneda === "23") {
            if (parseFloat(tipoCambio) !== 1) {
                alert("El tipo de cambio para Dólares debe ser igual a 1.");
                document.getElementById('TipoCambio').focus();
                return;
            }
        }

        // ✅ Validar importe antes de continuar
        if (!ValidarImporteMoras()) {
            return;
        }

        var importeMoraPagado = parseFloat(importeDolares) * parseFloat(tipoCambio);

        if (tipoMoneda === "24") {
            importeMoraPagado = Math.round(importeMoraPagado * 10) / 10;
        }

        $('#ImporteMorasPagado').val(importeMoraPagado.toFixed(2));
        ActualizarSaldo();
    }

    function ValidarImporteMoras() {
        var importeMorasDolares = parseFloat(document.getElementById("ImporteMorasDolares").value) || 0;
        var nuevoMontoMora = parseFloat(document.getElementById("NuevoMontoMora").value) || 0;

        if (importeMorasDolares > nuevoMontoMora) {
            alert("El importe ingresado no puede ser mayor al nuevo monto de mora permitido.");
            document.getElementById("ImporteMorasDolares").value = "0.00"; // Reiniciar a 0
            document.getElementById("ImporteMorasDolares").focus(); // Colocar el foco para corrección
            return false;
        }
        return true;
    }
    function ActualizarSaldo() {
        var nuevoMontoMora = parseFloat(document.getElementById("NuevoMontoMora").value) || 0;
        var importeTotalPagado = parseFloat(document.getElementById("ImporteTotalPagado").value) || 0;
        var importeMorasDolares = parseFloat(document.getElementById("ImporteMorasDolares").value) || 0;

        var saldo = nuevoMontoMora - (importeTotalPagado + importeMorasDolares);

        if (saldo < 0) {
            alert("El saldo no puede ser negativo. El valor de 'Importe Moras Dólares' ha sido restablecido.");
            document.getElementById("ImporteMorasDolares").value = 0;
            importeMorasDolares = 0;
            saldo = nuevoMontoMora - (importeTotalPagado + importeMorasDolares); // Recalcular
        }

        document.getElementById("saldo").value = saldo.toFixed(2);

        // Validación para habilitar/deshabilitar el botón
        var btnAgregar = document.getElementById("btnAgregar");

        var permitirAgregar = false;

        if (saldo >= 0) {
            if (importeMorasDolares > 0) {
                permitirAgregar = true;
            } else if (nuevoMontoMora === 0 && EsDescuento100PorCiento()) {
                permitirAgregar = true;
            }
        }

        btnAgregar.disabled = !permitirAgregar;
    }
    function EsDescuento100PorCiento() {
        var importeMorasTotal = parseFloat(document.getElementById("ImporteMorasTotal").value) || 0;
        var descuentoDirecto = parseFloat(document.getElementById("DescuentoDirecto").value) || 0;
        var descuentoPorcentaje = parseFloat(document.getElementById("DescuentoPorcentaje").value) || 0;

        return (
            (descuentoPorcentaje === 100) ||
            (descuentoDirecto === importeMorasTotal) ||
            ((descuentoDirecto > 0 && descuentoPorcentaje > 0) &&
                ((importeMorasTotal - descuentoDirecto) * (descuentoPorcentaje / 100) === (importeMorasTotal - descuentoDirecto)))
        );
    }
    function ActualizarImporteTotalPagado() {
        var total = 0;
        document.querySelectorAll(".importe-detalle").forEach(function (cell) {
            var valor = parseFloat(cell.textContent) || 0;
            total += valor;
        });

        document.getElementById("ImporteTotalPagado").value = total.toFixed(2);

        // Luego de actualizar el total, también actualizamos el saldo
        ActualizarSaldo();
    }
</script>