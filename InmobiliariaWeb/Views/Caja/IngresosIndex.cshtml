@model InmobiliariaWeb.Models.Ingresos.IngresosIndexViewModel

@{
}
<form method="post" asp-action="IngresosIndex" asp-controller="Caja">
    <div class="container">
        <div class="card">
            <div class="card-header">
                <div class="row align-items-center">
                    <div class="col-auto me-auto">
                        <h1>Ingresos</h1>
                    </div>
                    <div class="col-auto">
                        <a class="btn btn-outline-primary">
                            Nuevo
                        </a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row g-lg-3 g-sm-1 g-1">
                    <div class="col-12 col-sm-12 col-md-9 col-lg-6">
                        <div class="row">
                            <div class="col-6">
                                <div class="form-floating">
                                    <input class="form-control" type="date" asp-for="@Model.dFechaDesde" />
                                    <label>Desde:</label>
                                </div>

                            </div>
                            <div class="col-6">
                                <div class="form-floating">
                                    <input class="form-control" type="date" asp-for="@Model.dFechaHasta"/>
                                    <label>Hasta:</label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="form-floating">
                            <select class="form-select">
                                <option>--Seleccione--</option>
                                <option>Separacion</option>
                                <option>Cuota Inicial</option>
                                <option>Cuotas</option>
                                <option>Moras</option>
                                <option>Moras Masivas</option>
                                <option>Servicios</option>
                                <option>Administrativos</option>
                            </select>
                            <label>Tipo de Ingreso:</label>
                        </div>
                    </div>
                    <div class="col-12 col-sm-12 col-md-6 col-lg-8">
                        <div class="form-floating">
                            <select class="form-select" id="programas" asp-for="@Model.Ident_Programa" onchange="cargarManzanas()">
                                <option value="0"></option>
                                @foreach (var programas in Model.ProgramasCbxLists)
                                {
                                    <option value="@programas.Ident_Programa">@programas.Nombre_Programa</option>
                                }
                            </select>
                            <label>Programa:</label>
                        </div>
                    </div>
                    <div class="col-6 col-sm-6 col-md-3 col-lg-2">
                        <div class="form-floating">
                            <select class="form-select" id="manzana" asp-for="@Model.Ident_Manzana" onchange="cargarLotes()">
                                <option value="0"></option>
                            </select>
                            <label>Manzana</label>
                        </div>
                    </div>
                    <div class="col-6 col-sm-6 col-md-3 col-lg-2">
                        <div class="form-floating">
                            <select class="form-select" id="lote" asp-for="@Model.Ident_Lote" onchange="cargarClientes()">
                                <option value="0"></option>
                            </select>

                            <label>Lote</label>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-floating">
                            <select class="form-select" id="cliente" asp-for="@Model.Ident_Persona">
                                <option value="0"></option>
                            </select>
                            <label>Cliente:</label>
                        </div>
                    </div>
                    <div class="col-auto me-auto">
                        <a class="btn btn-outline-secondary">
                            Filtrar
                        </a>
                        <a class="btn btn-outline-primary">
                            Exportar
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="row align-items-center mt-1 mt-lg-2 mt-md-2">

            <div class="col-auto">
                <div class="form-floating">
                    <input type="text" class="form-control" />
                    <label>Total S/.</label>
                </div>
            </div>
            <div class="col-auto">
                <div class="form-floating">
                    <input type="text" class="form-control" />
                    <label>Total $</label>
                </div>
            </div>
        </div>
        <div class="table-responsive mt-2">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th hidden>Ident_Ingreso</th>
                        <th>Programa</th>
                        <th>Mz</th>
                        <th>Lt</th>
                        <th>Cliente</th>
                        <th>Tipo Ingreso</th>
                        <th>Moneda</th>
                        <th>Importe</th>
                        <th>Tipo Pago</th>
                        <th>N° Operacion</th>
                        <th>Fecha</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ingresos in Model.lIngresosTabla)
                    {
                        <tr>
                            <td hidden>@ingresos.nIdent_Ingresos</td>
                            <td>@ingresos.sPrograma</td>
                            <td>@ingresos.sManzana</td>
                            <td>@ingresos.nLote</td>
                            <td>@ingresos.sNombreCliente</td>
                            <td>@ingresos.sTipoIngreso</td>
                            <td>@ingresos.sMoneda</td>
                            <td>@ingresos.nImporte</td>
                            <td>@ingresos.sTipoPago</td>
                            <td>@ingresos.sNumeroOperacion</td>
                            <td>@ingresos.dFechaPago.ToString("dd/MM/yyyy")</td>
                            <td>Ver</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    
</form>
@section Scripts{
    <partial name="_ValidationScriptsPartial" />
}
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<script>
    function cargarManzanas() {
        var programaSelect = document.getElementById("programas");
        var selectedPrograma = programaSelect.value;
        var manzanaSelect = document.getElementById("manzana");
        var loteSelect = document.getElementById("lote");
        var clienteSelect = document.getElementById("cliente");

        // Limpiar opciones previas
        manzanaSelect.innerHTML = "<option value='0'></option>";
        loteSelect.innerHTML = "<option value='0'></option>";
        clienteSelect.innerHTML = "<option value='0'></option>";
        if (selectedPrograma && selectedPrograma !== "0") {
            fetch(`@Url.Action("GetManzanas", "Contratos")?programaId=${selectedPrograma}`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(manzana => {
                        var option = document.createElement("option");
                        option.value = manzana.ident_Manzana;
                        option.text = manzana.letra;
                        manzanaSelect.add(option);
                    });
                })
                .catch(error => console.error("Error al obtener las manzanas:", error));
        }
    }
    function cargarLotes() {
        var manzanaSelect = document.getElementById("manzana");
        var selectedManzana = manzanaSelect.value;
        var loteSelect = document.getElementById("lote");
        var clienteSelect = document.getElementById("cliente");

        // Limpiar opciones previas
        loteSelect.innerHTML = "<option value='0'></option>";
        clienteSelect.innerHTML = "<option value='0'></option>";

        if (selectedManzana && selectedManzana !== "0") {
            fetch(`@Url.Action("GetLotes", "Contratos")?manzanaId=${selectedManzana}`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(lote => {
                        var option = document.createElement("option");
                        option.value = lote.ident_Lote;
                        option.text = lote.correlativo;
                        loteSelect.add(option);
                    });
                })
                .catch(error => console.error("Error al obtener los lotes:", error));
        }
    }
    function cargarClientes() {
        var loteSelect = document.getElementById("lote");
        var selectedLote = loteSelect.value;
        var clienteSelect = document.getElementById("cliente");

        // Limpiar opciones previas
        clienteSelect.innerHTML = "<option value='0'></option>";

        if (selectedLote && selectedLote !== "0") {
            fetch(`@Url.Action("GetClientes", "Contratos")?clienteId=${selectedLote}`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(cliente => {
                        var option = document.createElement("option");
                        option.value = cliente.nIdent_Persona;
                        option.text = cliente.sNombreCompleto;
                        clienteSelect.add(option);
                    });
                })
                .catch(error => console.error("Error al obtener los clientes:", error));
        }
    }

</script>